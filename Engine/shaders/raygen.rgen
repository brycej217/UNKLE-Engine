#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable

struct Transform
{
    vec3 position;
    vec4 rotation;
};

layout(set = 0, binding = 4) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 5, rgba8) uniform image2D image;
layout(set = 0, binding = 6) uniform Camera 
{
    mat4 viewInv;
    mat4 projInv;
} camera;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main() 
{
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = camera.viewInv * vec4(0, 0, 0, 1);
    vec4 target = camera.projInv * vec4(d.x, d.y, 1, 1);
    vec4 direction = camera.viewInv * vec4(normalize(target.xyz), 0);

    float tmin = 0.001;
    float tmax = 10000.0;

    hitValue = vec3(0.0);

    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 1.0));
}